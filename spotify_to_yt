#!/bin/bash

usage="Usage:
    $(basename "$0") [options] <spotify_id>...

Options:
    -h, --help  Show this help message and exit.
    -p          Generate a YouTube playlist with the resulting video IDs.
    -r          Randomize the order of the YouTube video IDs.

Arguments:
    <spotify_id>    One or more Spotify track IDs to convert to YouTube video URLs.

Examples:
    $(basename "$0") 4PTG3Z6ehGkBFwjybzWkR8 6habFhsOp2NvshLv26DqMb
    cat input.txt | xargs $(basename "$0")"

for arg in "$@"; do case "$arg" in
    '-h' | '--help')
        echo "$usage"; exit 0 ;;
    '-p')
        playlist=true ;;
    '-r')
        random=true ;;
    *)
        spotifyIds+=("$arg") ;;
esac done

if [ -z "${spotifyIds[*]}" ]; then
    echo "$usage"; exit 0
fi

cache="$HOME/.cache/$(basename "$0").cache"
mkdir -p "$(dirname "$cache")"
touch "$cache"

for spotifyId in "${spotifyIds[@]}"; do
    ytId=$(grep "^$spotifyId:" "$cache" |
        cut -d ":" -f 2)

    if [ -z "$ytId" ]; then
        ytId=$(spotify_track_get_artist_and_title "$spotifyId" |
            xargs -0 yt_get_first_id)

        if [ -z "$ytId" ]; then 
            echo "nothing found for spotify id '$spotifyId'"
            exit 1
        fi

        echo "$spotifyId:$ytId" >> "$cache"
    fi

    ytIds+=("$ytId")
done

if [ "$random" = true ]; then
    mapfile -t ytIds < <(shuf -e -- "${ytIds[@]}")
fi

if [ "$playlist" = true ]; then
    yt_generate_playlist "${ytIds[@]}"
    exit 0
fi

printf "https://www.youtube.com/watch?v=%s\n" "${ytIds[@]}"